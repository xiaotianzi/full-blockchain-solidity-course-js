{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Fundme__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc11fba460accb88d9defbe221cbd7a7cd97ead7e50540543e4e43c441e1eff6f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1069598",
    "logsBloom": "0x
    "blockHash": "0xceab8d0fde8d77b8e6b3ba7b4bffccf03b51380e4a0936f35991e208a9543562",
    "transactionHash": "0xc11fba460accb88d9defbe221cbd7a7cd97ead7e50540543e4e43c441e1eff6f",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1069598",
    "status": 1,
    "byzantium": true
  },
  "args": ["0x5FbDB2315678afecb367f032d93F642f64180aa3"],
  "numDeployments": 1,
  "solcInputHash": "5f6359d74e05e0428fc387d0400f71cd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Fundme__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Tian\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror Fundme__NotOwner();\\n\\n/** @title A contract for crowd funding\\n *  @author Tian\\n *  @notice This contract is to demo a sample funding contract\\n *  @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert Fundme__NotOwner();\\n        require(msg.sender == i_owner, \\\"Fundme__NotOwner\\\");\\n        _;\\n    }\\n\\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    /** @notice This function funds this contract\\n     *  @dev This implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\",\"keccak256\":\"0xfc45bf2dbf2e14df05bd4e44e07da7dbb29d27cedefe7a3da4f25633f4d1b4da\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        // Sepolia ETH / USD Address\\r\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n        // or (Both will do the same thing)\\r\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // or (Both will do the same thing)\\r\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5219e3eb47aef4db14b47e85b782c0b81d6def4f2b10ff899070f3c4f378d211\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620013873803806200138783398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161120062000187600039600081816101f001528181610275015281816104cd0152818161065701526106dc01526112006000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101695761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610ba6565b6101a6565b6040516100b49190610bec565b60405180910390f35b3480156100c957600080fd5b506100d26101ee565b005b3480156100e057600080fd5b506100e96104bc565b6040516100f69190610bec565b60405180910390f35b34801561010b57600080fd5b506101146104c9565b6040516101219190610c16565b60405180910390f35b34801561013657600080fd5b5061013f6104f1565b60405161014c9190610c90565b60405180910390f35b61015d61051b565b005b610167610655565b005b34801561017557600080fd5b50610190600480360381019061018b9190610cd7565b610987565b60405161019d9190610c16565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610273576040517f85db10ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f890610d61565b60405180910390fd5b60005b6001805490508110156103ac5760006001828154811061032757610326610d81565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103a490610ddf565b915050610304565b50600067ffffffffffffffff8111156103c8576103c7610e27565b5b6040519080825280602002602001820160405280156103f65781602001602082028036833780820191505090505b506001908051906020019061040c929190610a9c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161043390610e87565b60006040518083038185875af1925050503d8060008114610470576040519150601f19603f3d011682016040523d82523d6000602084013e610475565b606091505b50509050806104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090610ee8565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b188000061055a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109cf90919063ffffffff16565b101561059b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059290610f54565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105e99190610f74565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106da576040517f85db10ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610768576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075f90610d61565b60405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107ec57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107a2575b5050505050905060005b815181101561087657600082828151811061081457610813610d81565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061086e90610ddf565b9150506107f6565b50600067ffffffffffffffff81111561089257610891610e27565b5b6040519080825280602002602001820160405280156108c05781602001602082028036833780820191505090505b50600190805190602001906108d6929190610a9c565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516108fd90610e87565b60006040518083038185875af1925050503d806000811461093a576040519150601f19603f3d011682016040523d82523d6000602084013e61093f565b606091505b5050905080610983576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097a90610ee8565b60405180910390fd5b5050565b60006001828154811061099d5761099c610d81565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109db83610a0b565b90506000670de0b6b3a764000085836109f49190610fa8565b6109fe9190611019565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610a59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7d91906110d7565b5050509150506402540be40081610a949190611152565b915050919050565b828054828255906000526020600020908101928215610b15579160200282015b82811115610b145782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610abc565b5b509050610b229190610b26565b5090565b5b80821115610b3f576000816000905550600101610b27565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7382610b48565b9050919050565b610b8381610b68565b8114610b8e57600080fd5b50565b600081359050610ba081610b7a565b92915050565b600060208284031215610bbc57610bbb610b43565b5b6000610bca84828501610b91565b91505092915050565b6000819050919050565b610be681610bd3565b82525050565b6000602082019050610c016000830184610bdd565b92915050565b610c1081610b68565b82525050565b6000602082019050610c2b6000830184610c07565b92915050565b6000819050919050565b6000610c56610c51610c4c84610b48565b610c31565b610b48565b9050919050565b6000610c6882610c3b565b9050919050565b6000610c7a82610c5d565b9050919050565b610c8a81610c6f565b82525050565b6000602082019050610ca56000830184610c81565b92915050565b610cb481610bd3565b8114610cbf57600080fd5b50565b600081359050610cd181610cab565b92915050565b600060208284031215610ced57610cec610b43565b5b6000610cfb84828501610cc2565b91505092915050565b600082825260208201905092915050565b7f46756e646d655f5f4e6f744f776e657200000000000000000000000000000000600082015250565b6000610d4b601083610d04565b9150610d5682610d15565b602082019050919050565b60006020820190508181036000830152610d7a81610d3e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dea82610bd3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e1c57610e1b610db0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e71600083610e56565b9150610e7c82610e61565b600082019050919050565b6000610e9282610e64565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ed2600b83610d04565b9150610edd82610e9c565b602082019050919050565b60006020820190508181036000830152610f0181610ec5565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610f3e601b83610d04565b9150610f4982610f08565b602082019050919050565b60006020820190508181036000830152610f6d81610f31565b9050919050565b6000610f7f82610bd3565b9150610f8a83610bd3565b9250828201905080821115610fa257610fa1610db0565b5b92915050565b6000610fb382610bd3565b9150610fbe83610bd3565b9250828202610fcc81610bd3565b91508282048414831517610fe357610fe2610db0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061102482610bd3565b915061102f83610bd3565b92508261103f5761103e610fea565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6110698161104a565b811461107457600080fd5b50565b60008151905061108681611060565b92915050565b6000819050919050565b61109f8161108c565b81146110aa57600080fd5b50565b6000815190506110bc81611096565b92915050565b6000815190506110d181610cab565b92915050565b600080600080600060a086880312156110f3576110f2610b43565b5b600061110188828901611077565b9550506020611112888289016110ad565b9450506040611123888289016110c2565b9350506060611134888289016110c2565b925050608061114588828901611077565b9150509295509295909350565b600061115d8261108c565b91506111688361108c565b92508282026111768161108c565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156111ae576111ad610db0565b5b82820584148315176111c3576111c2610db0565b5b509291505056fea26469706673582212203eaeef7289ae6f62dd419d7b8404b6f62534205821763b30f8eb64ad07c2bd9a64736f6c63430008120033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101695761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610ba6565b6101a6565b6040516100b49190610bec565b60405180910390f35b3480156100c957600080fd5b506100d26101ee565b005b3480156100e057600080fd5b506100e96104bc565b6040516100f69190610bec565b60405180910390f35b34801561010b57600080fd5b506101146104c9565b6040516101219190610c16565b60405180910390f35b34801561013657600080fd5b5061013f6104f1565b60405161014c9190610c90565b60405180910390f35b61015d61051b565b005b610167610655565b005b34801561017557600080fd5b50610190600480360381019061018b9190610cd7565b610987565b60405161019d9190610c16565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610273576040517f85db10ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f890610d61565b60405180910390fd5b60005b6001805490508110156103ac5760006001828154811061032757610326610d81565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103a490610ddf565b915050610304565b50600067ffffffffffffffff8111156103c8576103c7610e27565b5b6040519080825280602002602001820160405280156103f65781602001602082028036833780820191505090505b506001908051906020019061040c929190610a9c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161043390610e87565b60006040518083038185875af1925050503d8060008114610470576040519150601f19603f3d011682016040523d82523d6000602084013e610475565b606091505b50509050806104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090610ee8565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b188000061055a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109cf90919063ffffffff16565b101561059b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059290610f54565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105e99190610f74565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106da576040517f85db10ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610768576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075f90610d61565b60405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107ec57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107a2575b5050505050905060005b815181101561087657600082828151811061081457610813610d81565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061086e90610ddf565b9150506107f6565b50600067ffffffffffffffff81111561089257610891610e27565b5b6040519080825280602002602001820160405280156108c05781602001602082028036833780820191505090505b50600190805190602001906108d6929190610a9c565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516108fd90610e87565b60006040518083038185875af1925050503d806000811461093a576040519150601f19603f3d011682016040523d82523d6000602084013e61093f565b606091505b5050905080610983576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097a90610ee8565b60405180910390fd5b5050565b60006001828154811061099d5761099c610d81565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109db83610a0b565b90506000670de0b6b3a764000085836109f49190610fa8565b6109fe9190611019565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610a59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7d91906110d7565b5050509150506402540be40081610a949190611152565b915050919050565b828054828255906000526020600020908101928215610b15579160200282015b82811115610b145782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610abc565b5b509050610b229190610b26565b5090565b5b80821115610b3f576000816000905550600101610b27565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7382610b48565b9050919050565b610b8381610b68565b8114610b8e57600080fd5b50565b600081359050610ba081610b7a565b92915050565b600060208284031215610bbc57610bbb610b43565b5b6000610bca84828501610b91565b91505092915050565b6000819050919050565b610be681610bd3565b82525050565b6000602082019050610c016000830184610bdd565b92915050565b610c1081610b68565b82525050565b6000602082019050610c2b6000830184610c07565b92915050565b6000819050919050565b6000610c56610c51610c4c84610b48565b610c31565b610b48565b9050919050565b6000610c6882610c3b565b9050919050565b6000610c7a82610c5d565b9050919050565b610c8a81610c6f565b82525050565b6000602082019050610ca56000830184610c81565b92915050565b610cb481610bd3565b8114610cbf57600080fd5b50565b600081359050610cd181610cab565b92915050565b600060208284031215610ced57610cec610b43565b5b6000610cfb84828501610cc2565b91505092915050565b600082825260208201905092915050565b7f46756e646d655f5f4e6f744f776e657200000000000000000000000000000000600082015250565b6000610d4b601083610d04565b9150610d5682610d15565b602082019050919050565b60006020820190508181036000830152610d7a81610d3e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dea82610bd3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e1c57610e1b610db0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e71600083610e56565b9150610e7c82610e61565b600082019050919050565b6000610e9282610e64565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ed2600b83610d04565b9150610edd82610e9c565b602082019050919050565b60006020820190508181036000830152610f0181610ec5565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610f3e601b83610d04565b9150610f4982610f08565b602082019050919050565b60006020820190508181036000830152610f6d81610f31565b9050919050565b6000610f7f82610bd3565b9150610f8a83610bd3565b9250828201905080821115610fa257610fa1610db0565b5b92915050565b6000610fb382610bd3565b9150610fbe83610bd3565b9250828202610fcc81610bd3565b91508282048414831517610fe357610fe2610db0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061102482610bd3565b915061102f83610bd3565b92508261103f5761103e610fea565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6110698161104a565b811461107457600080fd5b50565b60008151905061108681611060565b92915050565b6000819050919050565b61109f8161108c565b81146110aa57600080fd5b50565b6000815190506110bc81611096565b92915050565b6000815190506110d181610cab565b92915050565b600080600080600060a086880312156110f3576110f2610b43565b5b600061110188828901611077565b9550506020611112888289016110ad565b9450506040611123888289016110c2565b9350506060611134888289016110c2565b925050608061114588828901611077565b9150509295509295909350565b600061115d8261108c565b91506111688361108c565b92508282026111768161108c565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156111ae576111ad610db0565b5b82820584148315176111c3576111c2610db0565b5b509291505056fea26469706673582212203eaeef7289ae6f62dd419d7b8404b6f62534205821763b30f8eb64ad07c2bd9a64736f6c63430008120033",
  "devdoc": {
    "author": "Tian",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
